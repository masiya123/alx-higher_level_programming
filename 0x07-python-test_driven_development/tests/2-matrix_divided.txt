# doctests for 2-matrix_divided.py

"""
This file contains doctests for the matrix_divided function
"""

import doctest
matrix_divided = __import__('2-matrix_divided').matrix_divided

## SUCCESSFUL TEST CONDITIONS

# Basic division cases
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

# Division with floats
>>> matrix_divided([[1.2, 2.2, 3.2], [4.2, 5.2, 6.2]], 1.2)
[[1.0, 1.83, 2.67], [3.5, 4.33, 5.17]]

# Division with negative divisor
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

## TEST CONDITIONS WHERE AN ERROR IS RAISED 

# Invalid matrix types
>>> matrix_divided(None, 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided("This is a string", 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Invalid elements within matrix
>>> matrix_divided([[2, "hello"], [1, 4]], 2)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

# Rows with different lengths
>>> matrix_divided([[1, 2], [3, 4, 5]], 2) 
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

# Division by zero
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

#  Divisor of incorrect type
>>> matrix_divided([[1, 2, 3], [4, 5, 6]], "5")
Traceback (most recent call last):
...
TypeError: div must be a number

doctest.testmod() # To run the tests
